name: CI/CD Pipeline
on:
  workflow_call:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - run: pnpm install --frozen-lockfile
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Lint code
        run: pnpm lint
  vitest-run:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - run: pnpm install --frozen-lockfile
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - run: pnpm test
  build:
    runs-on: ubuntu-latest
    needs: [lint, vitest-run]
    outputs:
      artifact_name: next-build
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Ci setup
        uses: ./.github/actions/ci-setup
      - name: Generate Prisma Client
        run: pnpx prisma generate
      - run: pnpm build
      - name: Upload Next.js Build Artifact
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: next-build
          path: .next
          if-no-files-found: error
  # cypress-run:
  #   runs-on: ubuntu-24.04
  #   needs: build
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v4
  #     - name: Ci setup
  #       uses: ./.github/actions/ci-setup
  #     - name: Download Next.js Build Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: next-build
  #         path: .next
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v6
  #       with:
  #         start: pnpm start
  #         wait-on: 'http://localhost:3000'
